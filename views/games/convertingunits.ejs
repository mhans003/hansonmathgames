<html>
    
    <head>
		
		<%- include("../partials/bootstrap") %>
        
        <meta charset="utf-8">
		
		<%- include("../partials/sharedstyles") %>
        
        <style>
        	#popup {
                color: rgba(255,255,255,1);
                font-size: 1.5em; 
            }
            
            .correctAnswer {
                position: relative; 
                -webkit-animation-name: example; /* Safari 4.0 - 8.0 */
                -webkit-animation-duration: 2s; /* Safari 4.0 - 8.0 */
                animation-name: correct;
                animation-duration: 2s;
            }
            
            .incorrectAnswer {
                position: relative; 
                -webkit-animation-name: example; /* Safari 4.0 - 8.0 */
                -webkit-animation-duration: 2s; /* Safari 4.0 - 8.0 */
                animation-name: incorrect;
                animation-duration: 2s;
            }
            
            @-webkit-keyframes correct {
                0%   {color:rgba(80,255,150,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top: 45px;}
          
                90% {color:rgba(80,255,150,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top:0px;}
                
                100% {color: rgba(80, 255, 150, 0.6); display: none; font-size: 1em; margin: auto; width: 200px;}
            }
          
            @keyframes correct {
              0%   {color:rgba(80,255,150,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top:45px;}
      
              90% {color:rgba(80,255,150,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top:0px;}
                
              100% {color: rgba(80, 255, 150, 0.6); display: none; font-size: 1em; margin: auto; width: 200px;}
            }
            
            @-webkit-keyframes incorrect {
                0%   {color:rgba(255,80,50,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top:45px;}
          
                90% {color:rgba(255,80,50,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top:0px;}
                
                100% {color:rgba(255,80,50,0.6); display: none; font-size: 1em; margin: auto; width: 200px;}
            }
          
            @keyframes incorrect {
              0%   {color:rgba(255,80,50,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top:45px;}
      
              90% {color:rgba(255,80,50,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top:0px;}
                
              100% {color:rgba(255,80,50,0.6); display: none; font-size: 1em; margin: auto; width: 200px;}
            }
        </style>
    
    </head>
    
    <title>Hanson Converting Units Game</title>
    
    <body>
		
		<%- include("../partials/navbaronly") %>
    
        <h1>Hanson Converting Units Game</h1>  
		<hr>
		
		<%- include ("../partials/highscores.ejs") %>
		
		<div class="container">
			
			<div id = 'popup'><br></div>
		
			<br>

			<div>
				<span id='largerUnits' class='largerUnits'>larger units =</span>
				<input id='input' class='input' type='text' placeholder=''>
				<span id='smallerUnits' class='smallerUnits'>smaller units</span>
				<br>
				<br>
			</div>

			<div class="container scoreform" id="submitscore">
					<div class='row justify-content-center'>
						<div class="col-xsm-4">
							<form class='form-signin' action='/games/submit' method='POST'>
								<h1 class='h3 credentialsheading mb-3 font-weight-normal'>Submit Score</h1>
								<div class='form-group'>
									<label for='inputUsername' class='sr-only'>Username</label>
									<input type='text' id='inputUsername' class='form-control' name='username' value=<%= currentUser.username %> readonly>
								</div>
								<div class='form-group'>
									<label for='inputGame' class='sr-only'>Game</label>
									<input type='text' id='inputGame' class='form-control' name='game' value='Hanson Converting Units Game' readonly>
								</div>
								<div class='form-group'>
									<label for='inputScore' class='sr-only'>Score</label>
									<input type='number' id='inputScore' class='form-control' name='score' readonly>
								</div>
								<div class='form-group'>
									<button class='btn btn-lg btn-primary btn-block' type='submit'>Submit Score</button>
								</div>
							</form>
						</div>
					</div>
				</div>

			<div>
				<button type="button" class="btn btn-primary startGame">START <i class="fas fa-play-circle"></i></button>
				<br>
				<button type="button" class="btn btn-primary resetGame">RESET <i class="fas fa-undo-alt"></i></button>
				<br>
				<p id='score' class='score'></p>
				<p id='incorrect' class='incorrect'></p>
			</div>
			
		</div>
        
    </body>
    
    <script>
        
        const startGameVar = document.querySelector('.startGame');
        const resetGameVar = document.querySelector('.resetGame');
        const continueVar = document.querySelector('.input');
        const largerUnitsVar = document.querySelector('.largerUnits');
        const smallerUnitsVar = document.querySelector('.smallerUnits');
        
        let score = 0;
        let answer = 0;
        let problem = ''; 
        
        /*
        class conversions {
            constructor(large, small, multiplier) {
                this.large = large;
                this.small = small; 
                this.multiplier = multiplier; 
            }
        }
        */
        function Conversions(large, small, multiplier) {
            this.large = large;
            this.small = small;
            this.multiplier = multiplier; 
        }
        
        let conversionList = [new Conversions('Feet','Inches',12),
                              new Conversions('Yards','Feet',3),
                              new Conversions('Meters','Centimeters',100),
                              new Conversions('Kilometers','Meters',1000),
                              new Conversions('Centimeters','Millimeters',10),
                              new Conversions('Kilograms','Grams',1000),
                              new Conversions('Hours','Minutes',60),
                              new Conversions('Minutes','Seconds',60),
                              new Conversions('Gallons','Quarts',4),
                              new Conversions('Quarts','Pints',2),
                              new Conversions('Pints','Cups',2),
                              new Conversions('Weeks','Days',7)];
        
        console.log(conversionList); 
        
        //game start conditions
        resetGameVar.disabled = true;
        resetGameVar.style.display = 'none';
        largerUnitsVar.style.display = 'none';
        smallerUnitsVar.style.display = 'none';
        continueVar.style.display = 'none'; 
        continueVar.disabled = true; //make ability to check answer disabled until start of game
		document.getElementById("submitscore").style.display = "none"; 
        
        //events
        
        startGameVar.addEventListener('click',startGame);
        resetGameVar.addEventListener('click', resetGame);
        continueVar.addEventListener('keydown', function(event) {
            if(event.keyCode === 13 && startGameVar.disabled == true) {
                checkAnswer(); 
            }
        }); 
        
        //functions
        
        function startGame() {
            
            startGameVar.disabled = true;
            startGameVar.style.display = 'none';
            continueVar.disabled = false; //make it possible to check an answer
            
            largerUnitsVar.style.display = 'initial';
            smallerUnitsVar.style.display = 'initial';
            continueVar.style.display = 'initial'; 
            continueVar.disabled = false; //make ability to check answer disabled until start of game
            
            document.getElementById('score').innerHTML = 'Problems Correct: '; 
            
            setTimeout(function() {
                
                //end game conditions
                alert('Time\s Up!');
                document.querySelector('body').style.backgroundColor = '#ffffff';
                continueVar.disabled = true;
                resetGameVar.disabled = false;
                resetGameVar.style.display = 'initial';
                document.querySelector('.score').style.color = 'green';
				
				//create new score
				
				document.getElementById("submitscore").style.display = "block";
				document.getElementById("inputScore").value = score; 
			
			}, 60000);
            
            createProblem();
            
        }
        
        function createProblem() {
            
            let randomNumber = Math.floor(Math.random() * 9 + 2); 
            
            let randomIndex = Math.floor(Math.random() * conversionList.length);
            
            document.getElementById('largerUnits').innerHTML = randomNumber + ' ' + conversionList[randomIndex].large + ' = ';
            document.getElementById('smallerUnits').innerHTML = conversionList[randomIndex].small; 
            
            answer = randomNumber * conversionList[randomIndex].multiplier;
            
            problem = randomNumber + ' ' + conversionList[randomIndex].large + ' = ' + answer + ' ' + conversionList[randomIndex].small;  
            
            console.log(answer);
            console.log(problem); 
            
        }
        
        function checkAnswer() {
            
            let userInput = Number(continueVar.value);
            
            if(userInput === answer)
            {
                //document.querySelector('body').style.backgroundColor = '#ccffcc';
				continueVar.style.backgroundColor = 'rgba(80,255,150,0.10)';
				document.getElementById('popup').innerHTML = '<div class="correctAnswer"><i class="fas fa-thumbs-up"></i></div>';
                score += 1; 
            }
            else
            {
                //document.querySelector('body').style.backgroundColor = '#ffebe6';
				continueVar.style.backgroundColor = 'rgba(255,80,50,0.10)';
				document.getElementById('popup').innerHTML = '<div class="incorrectAnswer"><i class="fas fa-thumbs-down"></i></div>';
                document.getElementById('incorrect').innerHTML += problem + '<br>'; 
            }
            
            document.getElementById('score').innerHTML = 'Problems Correct: ' + score;
            
            continueVar.value = ''; 
            createProblem(); 
            
        }
        
        function resetGame() {
            
            score = 0;
            answer = 0;
            problem = '';
            
            resetGameVar.disabled = true;
            resetGameVar.style.display = 'none'; 
        
            continueVar.disabled = true;
            
            startGameVar.disabled = false;
            startGameVar.style.display = 'initial';
            
            document.querySelector('.score').style.color = 'black';
            document.getElementById('score').innerHTML = '';
			document.getElementById("submitscore").style.display = "none"; 
            
            document.getElementById('incorrect').innerHTML = '';
            
            largerUnitsVar.style.display = 'none';
            smallerUnitsVar.style.display = 'none';
            continueVar.style.display = 'none'; 
            continueVar.disabled = true; //make ability to check answer disabled until start of game
            
        }
        
    </script>
    
</html>