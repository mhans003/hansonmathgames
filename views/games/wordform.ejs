<html>
    
    <head>
        
        <meta charset="utf-8">
        
        <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
        <link href="https://fonts.googleapis.com/css?family=IBM+Plex+Mono|Roboto|Varela+Round&display=swap" rel="stylesheet">
        <script src="https://kit.fontawesome.com/a18bce666e.js" crossorigin="anonymous"></script>
        
        <style>
            
            body {
				font-size: 1.25em;
                text-align: center;
               
                font-family: 'IBM Plex Mono', monospace;
                color: rgba(210, 210, 255, 1); 
                
                background-color: rgba(100,130,155,1);
                
                text-shadow: 0px 4px 3px rgba(0,0,0,0.4),
						 0px 8px 13px rgba(0,0,0,0.1),
						 0px 18px 23px rgba(0,0,0,0.1);
            }
			
			nav {
				font-size: 0.75em; 
			}
        
            
            hr {
                border: 0;
                height: 1px;
                background-image: linear-gradient(to right, rgba(0, 0, 0, 0), rgba(200, 200, 255, 1), rgba(0, 0, 0, 0));
            }
            
            h1 {
                
                font-size: 2.5em; 
                font-weight: 600;
                text-shadow: 0px 4px 3px rgba(0,0,0,0.4),
						 0px 8px 13px rgba(0,0,0,0.1),
						 0px 18px 23px rgba(0,0,0,0.1);
            }
            
            button, input {
                box-shadow: 5px 10px rgba(80,110,135,1); 
            }
            
            
            .wordsContainer {
                
                border-style: outset;
                border-color: rgba(210, 210, 255, 1);
                border-width: 4px;
                padding: 20px;
                margin-top: 20px;
                background-color: rgba(120,150,175,1);
                box-shadow: 5px 10px rgba(80,110,135,1); 
            }
            
        </style>
    
    </head>
    
    <title>Hanson Word Form Generator</title>
    
    <body>
		
		<%- include("../partials/navbaronly") %>
        
        <h1>Hanson Word Form Generator</h1>
        
        <hr>
    
        <div class='container'>

            <label for='input'>Enter a Number:</label>
            <input id='input' class='input' type='number' placeholder=''>
            
            <br>
            <br>
            
            <button type="button" class="btn btn-primary wordForm">Generate Word Form <i class="fas fa-keyboard"></i></button>
            <!--<input type='submit' value='Generate Word Form' class='wordForm'>-->
            
            
            <button type="button" class="btn btn-primary resetGame">Reset <i class="fas fa-undo-alt"></i></button>
            <!--<input type='submit' value='RESET' class='resetGame'>-->
            <br>
            <br>
            
            <div class='wordsContainer'>
                <p id='showWords'></p>
            </div>
            
        </div>
        
    </body>
    
    <script>
               
        let wordFormVar = document.querySelector('.wordForm');
        let resetVar = document.querySelector('.resetGame');
        let userInputVar = '';
        let textFieldReference = document.querySelector('.input'); 
        let wordsContainerVar = document.querySelector('.wordsContainer'); 
        
        let periodArrays = [];
        let decimalPeriodArrays = [];
        
        //globals for decimal use
        let fractionalNumber = '';
        let fractionalNumberLength = 0;
        let fractionPlace = 0; 
        let hasDecimal = false;
         
        //end globals for decimal use
        
        wordFormVar.addEventListener('click', generateArrays);
        resetVar.addEventListener('click', resetGame);
        
        wordsContainerVar.style.visibility = 'hidden';
        textFieldReference.focus(); 
        
        function generateArrays() {
            
            userInputVar = document.querySelector('.input');
            let number = userInputVar.value;
            let numberLength = number.length;
            
            //check if decimal 
            if(number.includes('.'))
            {
                let tempWholeNumber = number.substring(0, number.indexOf('.'));
                fractionalNumber = number.substring(number.indexOf('.') + 1, number.length);
                number = tempWholeNumber; 
                numberLength = number.length;
                fractionalNumberLength = fractionalNumber.length;
                fractionPlace = fractionalNumberLength; 
                
                hasDecimal = true; 
                
                console.log('decimal part:' + fractionalNumber);
            }
            //end of check if decimal
            
            //check if negative 
            if(Number(number) < 0)
            {
                negative = true;
                console.log('Negative: ' + negative); 
            }
            
            console.log('whole number part:' + number);
         
            //add zeros to beginning if not a multiple of 3 length:
            
            if (numberLength % 3 !== 0)
            {
                if (numberLength % 3 === 1)
                {
                    number = '00' + number;
                }
                else
                {
                    number = '0' + number; 
                }
                
                numberLength = number.length; 
            }
            
            for(let i = numberLength - 1; i >= 2; i -= 3)
            {
                let thisPeriod = [];
                
                if(i >= 2)
                {
                    thisPeriod.unshift(number[i]);
                    thisPeriod.unshift(number[i - 1]);
                    thisPeriod.unshift(number[i - 2]);
                } else if(i >= 1)
                {
                    thisPeriod.unshift(number[i]);
                    thisPeriod.unshift(number[i - 1]);
                }
                else
                {
                    this.Period.unshift(number[i]); 
                }
                
                periodArrays.push(thisPeriod);
                
                //console.log(thisPeriod); 
            }
            
            console.log(periodArrays); 
            
            //after arrays are created, create word form:
            generateWords(); 
            
        }
        
        function generateWords() {
            
            wordsContainerVar.style.visibility = 'visible'; 
            
            let output = '';
            
            let ending = ['',' Thousand',' Million',' Billion', ' Trillion', ' Quadrillion', ' Quintillion', ' Sextillion', ' Septillion', ' Octillion', ' Nonillion', ' Decillion', ' Undecillion', ' Duodecillion', ' Tredecillion', ' Quattuordecillion', ' Quindecillion', ' Sexdecillion', ' Septen-decillion', ' Octodecillion', ' Novemdecillion', ' Vigintillion'];
            
            for(let i = periodArrays.length - 1; i >= 0; i--)
            {
                let hundreds = periodArrays[i][0];
                //console.log('hundreds: ' + hundreds); 
                let hundredString = ''; 
                
                switch(hundreds) {
                    case '0':
                        hundredString = '';
                        break;
                    case '1':
                        hundredString = 'One Hundred';
                        break;
                    case '2':
                        hundredString = 'Two Hundred';
                        break;
                    case '3':
                        hundredString = 'Three Hundred';
                        break;
                    case '4':
                        hundredString = 'Four Hundred';
                        break;
                    case '5':
                        hundredString = 'Five Hundred';
                        break;
                    case '6':
                        hundredString = 'Six Hundred';
                        break;
                    case '7':
                        hundredString = 'Seven Hundred';
                        break;
                    case '8':
                        hundredString = 'Eight Hundred';
                        break;
                    case '9':
                        hundredString = 'Nine Hundred';
                        break;
                }
                
                let tens = periodArrays[i][1];
                let ones = periodArrays[i][2]; 
                let tenString = '';
                let oneString = ''; 
                
                switch(tens) {
                    case '0':
                        tenString = '';
                        break;
                    case '1':
                        
                        switch(ones) {
                            case '0':
                                tenString = 'Ten';
                                break;
                            case '1':
                                tenString = 'Eleven';
                                break;
                            case '2':
                                tenString = 'Twelve';
                                break;
                            case '3':
                                tenString = 'Thirteen';
                                break;
                            case '4':
                                tenString = 'Fourteen';
                                break;
                            case '5':
                                tenString = 'Fifteen';
                                break;
                            case '6':
                                tenString = 'Sixteen';
                                break;
                            case '7':
                                tenString = 'Seventeen';
                                break;
                            case '8':
                                tenString = 'Eighteen';
                                break;
                            case '9':
                                tenString = 'Nineteen';
                                break; 
                        }
                        
                        break;
                    case '2':
                        tenString = 'Twenty';
                        if(ones !== '0')
                        {
                            tenString += '-'; 
                        }
                        break;
                    case '3':
                        tenString = 'Thirty';
                        if(ones !== '0')
                        {
                            tenString += '-'; 
                        }
                        break;
                    case '4':
                        tenString = 'Forty';
                        if(ones !== '0')
                        {
                            tenString += '-'; 
                        }
                        break;
                    case '5':
                        tenString = 'Fifty';
                        if(ones !== '0')
                        {
                            tenString += '-'; 
                        }
                        break;
                    case '6':
                        tenString = 'Sixty';
                        if(ones !== '0')
                        {
                            tenString += '-'; 
                        }
                        break;
                    case '7':
                        tenString = 'Seventy';
                        if(ones !== '0')
                        {
                            tenString += '-'; 
                        }
                        break;
                    case '8':
                        tenString = 'Eighty';
                        if(ones !== '0')
                        {
                            tenString += '-'; 
                        }
                        break;
                    case '9':
                        tenString = 'Ninety';
                        if(ones !== '0')
                        {
                            tenString += '-'; 
                        }
                        break; 
                }
                
                if(tens !== '1')
                {
                    switch(ones) {
                        case '0':
                            oneString = '';
                            break;
                        case '1':
                            oneString = 'One';
                            break;
                        case '2':
                            oneString = 'Two';
                            break;
                        case '3':
                            oneString = 'Three';
                            break;
                        case '4':
                            oneString = 'Four';
                            break;
                        case '5':
                            oneString = 'Five';
                            break;
                        case '6':
                            oneString = 'Six';
                            break;
                        case '7':
                            oneString = 'Seven';
                            break;
                        case '8':
                            oneString = 'Eight';
                            break;
                        case '9':
                            oneString = 'Nine';
                            break;
                    }
                }
                if(periodArrays[i][0] === '0' && periodArrays[i][1] === '0' && periodArrays[i][2] === '0' && i !== 0)
                {
                    output += hundredString + ' ' + tenString + oneString;
                }
                else
                {
                    output += hundredString + ' ' + tenString + oneString + ending[i] + ' ';
                }
                
            }
            
            
            //below is for IF includes decimal
            
        
            
            if(hasDecimal === true)
            {
                let decimalString = generateDecimals();
                
                if(output === '' || Number(output) == 0)
                {
                    output += decimalString; 
                }
                else
                {
                    output += 'and ' + decimalString; 
                }
                
                

            }        
            
            //end IF includes decimal
            
            if(output.trim() === '')
            {
                output = 'Zero (Or Bad Input)'; 
            }
            
            if(output.includes('undefined'))
            {
                output = 'Nice try, kiddo. Too large!'; 
            }
            
        
            
            document.getElementById('showWords').innerHTML = output;
            
            wordFormVar.disabled = true; 
            
        }
        
        //for IF includes decimal
        
        function generateDecimals() {
            
            let decimalEndings = [' Tenths', ' Hundredths', ' Thousandths', ' Ten Thousandths', ' Hundred Thousandths', ' Millionths',' Ten Millionths', ' Hundred Millionths', ' Billionths', ' Ten Billionths', ' Hundred Billionths', ' Trillionths', ' Ten Trillionths', ' Hundred Trillionths', ' Quadrillionths', ' Ten Quadrillionths', ' Hundred Quadrillionths', ' Quintillionths', ' Ten Quintillionths', ' Hundred Quintillionths', ' Sextillionths', ' Ten Sextillionths', ' Hundred Sextillionths', ' Septillionths', ' Ten Septillionths', ' Hundred Septillionths', ' Octillionths', ' Ten Octillionths', ' Hundred Octillionths', ' Nonillionths', ' Ten Nonillionths', ' Hundred Nonillionths', ' Decillionths', ' Ten Decillionths', ' Hundred Decillionths', ' Duodecillionths', ' Ten Duodecillionths', ' Hundred Duodecillionths', ' Tredecillionths', ' Ten Tredecillionths', ' Hundred Tredecillionths', ' Quattuordecillionths', ' Ten Quattuordecillionths', ' Hundred Quattuordecillionths', ' Quindecillionths', ' Ten Quindecillionths', ' Hundred Quindecillionths', ' Sexdecillionths', ' Ten Sexdecillionths', ' Hundred Sexdecillionths', ' Septendecillionths', ' Ten Septendecillionths', ' Hundred Septendecillionths', ' Octodecillionths', ' Ten Octodecillionths', ' Hundred Octodecillionths', ' Novemdecillionths', ' Ten Novemdecillionths', ' Hundred Novemdecillionths', ' Vigintillionths', ' Ten Vigintillionths', ' Hundred Vigintillionths'];
            
            if (fractionalNumberLength % 3 !== 0)
            {
                if (fractionalNumberLength % 3 === 1)
                {
                    fractionalNumber = '00' + fractionalNumber;
                }
                else
                {
                    fractionalNumber = '0' + fractionalNumber; 
                }
                
                fractionalNumberLength = fractionalNumber.length; 
            }
            
            for(let i = fractionalNumberLength - 1; i >= 2; i -= 3)
            {
                let thisPeriod = [];
                
                if(i >= 2)
                {
                    thisPeriod.unshift(fractionalNumber[i]);
                    thisPeriod.unshift(fractionalNumber[i - 1]);
                    thisPeriod.unshift(fractionalNumber[i - 2]);
                } else if(i >= 1)
                {
                    thisPeriod.unshift(fractionalNumber[i]);
                    thisPeriod.unshift(fractionalNumber[i - 1]);
                }
                else
                {
                    this.Period.unshift(fractionalNumber[i]); 
                }
                
                decimalPeriodArrays.push(thisPeriod);
                
                //console.log(thisPeriod); 
            }
            
            let output = '';
            
            let ending = ['',' Thousand',' Million',' Billion', ' Trillion', ' Quadrillion', ' Quintillion', ' Sextillion', ' Septillion', ' Octillion', ' Nonillion', ' Decillion', ' Undecillion', ' Duodecillion', ' Tredecillion', ' Quattuordecillion', ' Quindecillion', ' Sexdecillion', ' Septen-decillion', ' Octodecillion', ' Novemdecillion', ' Vigintillion'];
            
            for(let i = decimalPeriodArrays.length - 1; i >= 0; i--)
            {
                let hundreds = decimalPeriodArrays[i][0];
                //console.log('hundreds: ' + hundreds); 
                let hundredString = ''; 
                
                switch(hundreds) {
                    case '0':
                        hundredString = '';
                        break;
                    case '1':
                        hundredString = 'One Hundred';
                        break;
                    case '2':
                        hundredString = 'Two Hundred';
                        break;
                    case '3':
                        hundredString = 'Three Hundred';
                        break;
                    case '4':
                        hundredString = 'Four Hundred';
                        break;
                    case '5':
                        hundredString = 'Five Hundred';
                        break;
                    case '6':
                        hundredString = 'Six Hundred';
                        break;
                    case '7':
                        hundredString = 'Seven Hundred';
                        break;
                    case '8':
                        hundredString = 'Eight Hundred';
                        break;
                    case '9':
                        hundredString = 'Nine Hundred';
                        break;
                }
                
                let tens = decimalPeriodArrays[i][1];
                let ones = decimalPeriodArrays[i][2]; 
                let tenString = '';
                let oneString = ''; 
                
                switch(tens) {
                    case '0':
                        tenString = '';
                        break;
                    case '1':
                        
                        switch(ones) {
                            case '0':
                                tenString = 'Ten';
                                break;
                            case '1':
                                tenString = 'Eleven';
                                break;
                            case '2':
                                tenString = 'Twelve';
                                break;
                            case '3':
                                tenString = 'Thirteen';
                                break;
                            case '4':
                                tenString = 'Fourteen';
                                break;
                            case '5':
                                tenString = 'Fifteen';
                                break;
                            case '6':
                                tenString = 'Sixteen';
                                break;
                            case '7':
                                tenString = 'Seventeen';
                                break;
                            case '8':
                                tenString = 'Eighteen';
                                break;
                            case '9':
                                tenString = 'Nineteen';
                                break; 
                        }
                        
                        break;
                    case '2':
                        tenString = 'Twenty';
                        if(ones !== '0')
                        {
                            tenString += '-'; 
                        }
                        break;
                    case '3':
                        tenString = 'Thirty';
                        if(ones !== '0')
                        {
                            tenString += '-'; 
                        }
                        break;
                    case '4':
                        tenString = 'Forty';
                        if(ones !== '0')
                        {
                            tenString += '-'; 
                        }
                        break;
                    case '5':
                        tenString = 'Fifty';
                        if(ones !== '0')
                        {
                            tenString += '-'; 
                        }
                        break;
                    case '6':
                        tenString = 'Sixty';
                        if(ones !== '0')
                        {
                            tenString += '-'; 
                        }
                        break;
                    case '7':
                        tenString = 'Seventy';
                        if(ones !== '0')
                        {
                            tenString += '-'; 
                        }
                        break;
                    case '8':
                        tenString = 'Eighty';
                        if(ones !== '0')
                        {
                            tenString += '-'; 
                        }
                        break;
                    case '9':
                        tenString = 'Ninety';
                        if(ones !== '0')
                        {
                            tenString += '-'; 
                        }
                        break; 
                }
                
                if(tens !== '1')
                {
                    switch(ones) {
                        case '0':
                            oneString = '';
                            break;
                        case '1':
                            oneString = 'One';
                            break;
                        case '2':
                            oneString = 'Two';
                            break;
                        case '3':
                            oneString = 'Three';
                            break;
                        case '4':
                            oneString = 'Four';
                            break;
                        case '5':
                            oneString = 'Five';
                            break;
                        case '6':
                            oneString = 'Six';
                            break;
                        case '7':
                            oneString = 'Seven';
                            break;
                        case '8':
                            oneString = 'Eight';
                            break;
                        case '9':
                            oneString = 'Nine';
                            break;
                    }
                }
                if(decimalPeriodArrays[i][0] === '0' && decimalPeriodArrays[i][1] === '0' && decimalPeriodArrays[i][2] === '0' && i !== 0)
                {
                    output += hundredString + ' ' + tenString + oneString;
                }
                else
                {
                    output += hundredString + ' ' + tenString + oneString + ending[i] + ' ';
                }       
                
            }
            
            if(Number(fractionalNumber) == 0)
            {
                output = 'Zero'; 
            }
            
            let decimalEnding = decimalEndings[fractionPlace - 1];
                    
            output += decimalEnding;
            
            if(output.includes('undefined'))
            {
                output = '(Too Many Decimal Places)'; 
            }
            
            return output; 
        }
        
        //end IF includes decimal
        
        function resetGame() {
            
            wordFormVar.disabled = false; 
            periodArrays = [];
            decimalPeriodArrays = []; 
            document.getElementById('showWords').innerHTML = '';
            //for IF includes decimal
            hasDecimal = false;
            fractionalNumber = '';
            fractionalNumberLength = 0;
            fractionPlace = 0; 
            //end IF includes decimal
            userInputVar.value = '';
            wordsContainerVar.style.visibility = 'hidden';
            textFieldReference.focus();
            
        }  
        
    </script>
    
</html>