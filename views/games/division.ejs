<html>
    
    <head>
        
        <meta charset="utf-8">
        
        <%- include("../partials/sharedstyles") %>
        
        <style>
			
			.problemContainer {
                font-size: 2.5em;
            }
            
            .correctAnswer {
                position: relative; 
                -webkit-animation-name: example; /* Safari 4.0 - 8.0 */
                -webkit-animation-duration: 2s; /* Safari 4.0 - 8.0 */
                animation-name: correct;
                animation-duration: 2s;
            }
            
            .incorrectAnswer {
                position: relative; 
                -webkit-animation-name: example; /* Safari 4.0 - 8.0 */
                -webkit-animation-duration: 2s; /* Safari 4.0 - 8.0 */
                animation-name: incorrect;
                animation-duration: 2s;
            }
            
            #score {
                font-size: 1.2em; 
            }
            
            #popup {
                font-size: 2.5em;
                color: rgba(230,230,255,0.15);
            }
            
            @-webkit-keyframes correct {
                0%   {color:rgba(80,255,150,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top: 110px;}
          
                90% {color:rgba(80,255,150,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top:0px;}
                
                100% {color: rgba(80, 255, 150, 0.6); display: none; font-size: 1em; margin: auto; width: 200px;}
            }
          
            @keyframes correct {
              0%   {color:rgba(80,255,150,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top:110px;}
      
              90% {color:rgba(80,255,150,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top:0px;}
                
              100% {color: rgba(80, 255, 150, 0.6); display: none; font-size: 1em; margin: auto; width: 200px;}
            }
            
            @-webkit-keyframes incorrect {
                0%   {color:rgba(255,80,50,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top:110px;}
          
                90% {color:rgba(255,80,50,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top:0px;}
                
                100% {color:rgba(255,80,50,0.6); display: none; font-size: 1em; margin: auto; width: 200px;}
            }
          
            @keyframes incorrect {
              0%   {color:rgba(255,80,50,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top:110px;}
      
              90% {color:rgba(255,80,50,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top:0px;}
                
              100% {color:rgba(255,80,50,0.6); display: none; font-size: 1em; margin: auto; width: 200px;}
            }
            
        </style>
    
    </head>
    
    <title>Hanson Division Game</title>
    
    <body>
		
		<%- include("../partials/navbaronly") %>
        
        <div class="container">
        
            <h1>Hanson Division Game</h1>
            <hr>
			
			<%- include ("../partials/highscores.ejs") %>
			
			<div id="timer"></div>
        
            <button type="button" class="btn btn-primary startGame">START <i class="fas fa-play-circle"></i></button>
            <br>
            <button type="button" class="btn btn-primary resetGame">RESET <i class="fas fa-undo-alt"></i></button>
            <br>
            <br> 
          
            <div class='problemContainer problem' id='problem'>
                
            </div>
			
			<div class="container scoreform" id="submitscore">
				<div class='row justify-content-center'>
					<div class="col-xsm-4">
						<form class='form-signin' action='/games/submit' method='POST'>
							<h1 class='h3 credentialsheading mb-3 font-weight-normal'>Submit Score</h1>
							<div class='form-group'>
								<label for='inputUsername' class='sr-only'>Username</label>
								<input type='text' id='inputUsername' class='form-control' name='username' value=<%= currentUser.username %> readonly>
							</div>
							<div class='form-group'>
								<label for='inputGame' class='sr-only'>Game</label>
								<input type='text' id='inputGame' class='form-control' name='game' value='Hanson Division Game' readonly>
							</div>
							<div class='form-group'>
								<label for='inputScore' class='sr-only'>Score</label>
								<input type='number' id='inputScore' class='form-control' name='score' readonly>
							</div>
							<div class='form-group'>
								<button class='btn btn-lg btn-primary btn-block' type='submit'>Submit Score</button>
							</div>
						</form>
					</div>
				</div>
			</div>
			
			<div class="container scoreform" id="submitscore"></div>
            
            <div class='answerContainer' id='answerContainer'>
                <br>
                <div id = 'popup'> </div>
                <br>
                <h2>Answer</h2>
                
                <input id='answer' class='answer' type='text' placeholder=''>
                
            </div>
            
            <br>
            
            <div class='scoreContainer'>
                
                <p id='score'>Current Score: </p>
            
                <h3>Problems to Practice:</h3>
                <p id='show answer'></p>
                
            </div>
            
        </div>
        
    </body>
    
    <script>
        
        let finalScore = 0; 
        let problem = '';
        let answer = 0;
        let dividend = 0; 
		
		let startTime = 60; 
		let setTimer = ''; 
    
        //constants/element variables
        
        const startGameVar = document.querySelector('.startGame');
        const resetGameVar = document.querySelector('.resetGame');
        const continueVar = document.querySelector('.answer');
        const problemContainerVar = document.querySelector('.problemContainer');
		
		var timerVar = document.querySelector("#timer"); 
        
        //game start conditions
        resetGameVar.disabled = true;
        //resetGameVar.style.visibility = 'hidden'; 
		resetGameVar.style.display = 'none'; 
        continueVar.disabled = true; //make ability to check answer disabled until start of game
        //problemContainerVar.style.visibility = 'hidden'; 
		problemContainerVar.style.display = 'none';
		document.getElementById("submitscore").style.display = "none"; 
		
		timerVar.style.display = "none"; 
        
        //events
        
        startGameVar.addEventListener('click',startGame);
        resetGameVar.addEventListener('click', resetGame);
        continueVar.addEventListener('keydown', function(event) {
            if(event.keyCode === 13 && startGameVar.disabled == true) {
                checkAnswer(); 
            }
        });
        
        //functions
        
        function startGame() {
            startGameVar.disabled = true;
            //startGameVar.style.visibility = 'hidden';
			startGameVar.style.display = 'none';
            continueVar.disabled = false; //make it possible to check an answer
            //problemContainerVar.style.visibility = 'visible';
			problemContainerVar.style.display = 'block';
			continueVar.focus();
			startGameVar.style.display = 'none';
            resetGameVar.style.display = 'none'; 
			
			//timer 
			timerVar.style.display = "block"; 
			timerVar.innerHTML = '01:00'; 
			setTimer = setInterval(countDown, 1000); 
            //setTimeout(timeout, 60000);
			
            createProblem(); //generate first problem
        }
		
		function countDown() {
			
			startTime--; 
			
			if(startTime > 9)
				{
					timerVar.innerHTML = '00:' + startTime; 
				}
			else
				{
					timerVar.innerHTML = '00:0' + startTime; 
				}
			if(startTime < 1)
				{
					timeout(); 
				}
			
		}
        
        function timeout() {
            //end game conditions
			
			//stop screen timer
			clearInterval(setTimer); 
			
            document.querySelector('body').style.backgroundColor = '#ffffff';
            alert('Time\s Up!');
            continueVar.disabled = true;
            resetGameVar.disabled = false;
            //resetGameVar.style.visibility = 'visible';
			startGameVar.style.display = 'initial';
            resetGameVar.style.display = 'initial'; 
                
            document.getElementById('problem').innerHTML = 'Final Score: ' + finalScore;
            document.querySelector('.problem').style.color = 'green';
			
			//create new score
			
			document.getElementById("submitscore").style.display = "block"; 
			document.getElementById("inputScore").value = finalScore; 
            }
        
        function resetGame() {
			
			startTime = 60;
			
            finalScore = 0;
            
            resetGameVar.disabled = true;
            //resetGameVar.style.visibility = 'hidden'; 
			resetGameVar.style.display = 'none';
            continueVar.disabled = true;
            startGameVar.disabled = false;
            //startGameVar.style.visibility = 'visible';
			startGameVar.style.display = 'initial';
			problemContainerVar.style.display = 'none';
			continueVar.style.backgroundColor = 'rgba(255,255,255,1)';
			
			timerVar.style.display = "none";
            
            document.getElementById('problem').innerHTML = '';
            document.querySelector('.problem').style.color = 'black';
            document.getElementById('show answer').innerHTML = '';
            document.getElementById('score').innerHTML = 'Current Score: ';
			document.getElementById("submitscore").style.display = "none"; 
            
            //problemContainerVar.style.visibility = 'hidden';
        }
        
        
        function createProblem() {
            //each time create problem is run, make it not possible to create another problem (aka enter will run check answer) 
            answer = Math.floor(Math.random() * 13);
            let divisor = Math.floor(Math.random() * 12 + 1);
            dividend = answer * divisor;
            problem = dividend + ' &#247; ' + divisor;
            
            document.getElementById('problem').innerHTML = problem; 
            
        }
        
        function checkAnswer() {
            let userInput = Number(continueVar.value);
            
            if(userInput === answer)
            {
                if(answer === 0 && continueVar.value === '')
                {
                    //document.querySelector('body').style.backgroundColor = '#ffebe6';
                    document.getElementById('popup').innerHTML = '<div class="incorrectAnswer"><i class="fas fa-thumbs-down"></i>' + ' -50' + '</div>';
                    continueVar.style.backgroundColor = 'rgba(255,80,50,0.10)';
                    finalScore -= 50;
                    document.getElementById('show answer').innerHTML += problem + ' = ' + answer + '<br>';
                }
                else
                {
                    //document.querySelector('body').style.backgroundColor = '#ccffcc';
                    document.getElementById('popup').innerHTML = '<div class="correctAnswer"><i class="fas fa-thumbs-up"></i>' + ' +' + dividend + '</div>';
                    continueVar.style.backgroundColor = 'rgba(80,255,150,0.10)';
                    finalScore += dividend;
                }
            }
            else
            {
                //document.querySelector('body').style.backgroundColor = '#ffebe6';
                document.getElementById('popup').innerHTML = '<div class="incorrectAnswer"><i class="fas fa-thumbs-down"></i>' + ' -' + dividend + '</div>';
                continueVar.style.backgroundColor = 'rgba(255,80,50,0.10)';
                finalScore -= dividend;
                document.getElementById('show answer').innerHTML += problem + ' = ' + answer + '<br>';
            }
       
            document.getElementById('score').innerHTML = 'Current Score: ' + finalScore;
            
            continueVar.value = ''; 
            createProblem(); 
        }
        
    </script>
    
</html>