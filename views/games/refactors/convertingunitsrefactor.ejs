<html>
    
    <head>
        
        <meta charset="utf-8">
		
		<%- include("../../partials/sharedstyles") %>
        
        <style>
			
        	#popup {
                color: rgba(230,230,255,0.15);
                font-size: 1.5em; 
            }
            
            .correctAnswer {
                position: relative; 
                -webkit-animation-name: example; /* Safari 4.0 - 8.0 */
                -webkit-animation-duration: 2s; /* Safari 4.0 - 8.0 */
                animation-name: correct;
                animation-duration: 2s;
            }
            
            .incorrectAnswer {
                position: relative; 
                -webkit-animation-name: example; /* Safari 4.0 - 8.0 */
                -webkit-animation-duration: 2s; /* Safari 4.0 - 8.0 */
                animation-name: incorrect;
                animation-duration: 2s;
            }
            
            @-webkit-keyframes correct {
                0%   {color:rgba(80,255,150,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top: 45px;}
          
                90% {color:rgba(80,255,150,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top:0px;}
                
                100% {color: rgba(80, 255, 150, 0.6); display: none; font-size: 1em; margin: auto; width: 200px;}
            }
          
            @keyframes correct {
              0%   {color:rgba(80,255,150,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top:45px;}
      
              90% {color:rgba(80,255,150,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top:0px;}
                
              100% {color: rgba(80, 255, 150, 0.6); display: none; font-size: 1em; margin: auto; width: 200px;}
            }
            
            @-webkit-keyframes incorrect {
                0%   {color:rgba(255,80,50,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top:45px;}
          
                90% {color:rgba(255,80,50,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top:0px;}
                
                100% {color:rgba(255,80,50,0.6); display: none; font-size: 1em; margin: auto; width: 200px;}
            }
          
            @keyframes incorrect {
              0%   {color:rgba(255,80,50,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top:45px;}
      
              90% {color:rgba(255,80,50,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top:0px;}
                
              100% {color:rgba(255,80,50,0.6); display: none; font-size: 1em; margin: auto; width: 200px;}
            }
			
        </style>
    
    </head>
    
    <title>Hanson Converting Units Game</title>
    
    <body>
		
		<%- include("../../partials/navbaronly") %>
    
		<div class="container">
			
			<h1>Hanson Converting Units Game</h1>  
			<hr>
			
			<%- include ("../../partials/highscores.ejs") %>
			
			<div id="timer"></div>
			
			<div id='popup'> </div>
		
			<br>

			<div>
				
				<span id='largerUnits'>larger units =</span>
				<input id='answer' type='text' placeholder=''>
				<span id='smallerUnits'>smaller units</span>
				<br>
				<br>
				
			</div>

			<%- include ("../../partials/scoreform.ejs") %>

			<div>
				
				<button type="button" class="btn btn-primary" id="startGame">START <i class="fas fa-play-circle"></i></button>
				<br>
				<button type="button" class="btn btn-primary" id="resetGame">RESET <i class="fas fa-undo-alt"></i></button>
				<br>
				<p id='score'></p>
				<p id='showAnswer'></p>
				
			</div>
			
			<!--include "../../partials/showpracticeproblems.ejs" here-->
			
		</div>
        
    </body>
    
    <script>
		
		//VARIABLES
		
		let gameName = "Hanson Converting Units Game"; 
        
		const scoreVar = document.querySelector('#score'); 
		const continueVar = document.querySelector('#answer');
        const startGameVar = document.querySelector('#startGame');
        const resetGameVar = document.querySelector('#resetGame');
        const showAnswerVar = document.querySelector('#showAnswer'); 
		const submitScoreVar = document.querySelector('#submitScore'); 
		//const showPracticeProblemsVar = document.querySelector('#showPracticeProblems'); 
		
		var timerVar = document.querySelector("#timer"); 
		
		//GAME SPECIFIC VARIABLES
        
		let answerWithUnits = ''; 
        const largerUnitsVar = document.querySelector('#largerUnits');
        const smallerUnitsVar = document.querySelector('#smallerUnits');
		
		function Conversions(large, small, multiplier) {
			
            this.large = large;
            this.small = small;
            this.multiplier = multiplier; 
			
        }
        
        let conversionList = [new Conversions('Feet','Inches',12),
                              new Conversions('Yards','Feet',3),
                              new Conversions('Meters','Centimeters',100),
                              new Conversions('Kilometers','Meters',1000),
                              new Conversions('Centimeters','Millimeters',10),
                              new Conversions('Kilograms','Grams',1000),
                              new Conversions('Hours','Minutes',60),
                              new Conversions('Minutes','Seconds',60),
                              new Conversions('Gallons','Quarts',4),
                              new Conversions('Quarts','Pints',2),
                              new Conversions('Pints','Cups',2),
                              new Conversions('Weeks','Days',7)];

        
        //EVENTS
        
        startGameVar.addEventListener('click', startGame);
        resetGameVar.addEventListener('click', resetGame);
        continueVar.addEventListener('keydown', function(event) {
            if(event.keyCode === 13 && startGameVar.disabled == true) {
                checkAnswer(); 
            }
        }); 
		
		//INITIALIZE
		setUp();  
        
        //FUNCTIONS
		
		function setUp() {
			
			resetOff();
			continueOff(); 
			
			timerVar.style.display = "none"; 
			submitScoreVar.style.display = 'none'; 
			//showPracticeProblemsVar.style.display = 'none'; 
			
			largerUnitsVar.style.display = 'none';
       		smallerUnitsVar.style.display = 'none';
			
		}
        
        function startGame() {
			
			startOff(); 
			resetOff(); 
			continueOn(); 
			
			setUpTimer();
			
			//GAME-SPECIFIC
            
            largerUnitsVar.style.display = 'initial';
            smallerUnitsVar.style.display = 'initial';
       		scoreVar.innerHTML = 'Current Score: '; 
            
            createProblem();
            
        }
		
		function timeout() {
			
			endTimer(); 
			
			resetOn();
			continueOff(); 
			
			scoreVar.style.color = 'green'; 
			//showPracticeProblemsVar.style.display = 'block'; 
            
			//create new score 
			
			createNewScore(); 
			
			//populate problems
			//populatePracticeProblems(); 
			
		}
		
		function resetGame() {
			
			//problemList = []; 
			
       		startOn(); 
			resetOff(); 
			clearTimer(); 
			continueOff(); 
			resetVariables();
			//createPracticeProblemsButton(); 
			
			continueVar.value = ''; 
			scoreVar.innerHTML = ''; 
			showAnswerVar.innerHTML = ''; 
			scoreVar.style.color = 'black';  
			submitScoreVar.style.display = 'none'; 
			//showPracticeProblemsVar.style.display = 'none';
			continueVar.style.backgroundColor = 'rgba(255,255,255,1)';
			
			largerUnitsVar.style.display = 'none';
            smallerUnitsVar.style.display = 'none';
            
        }
        
        function createProblem() {
            
            let randomNumber = Math.floor(Math.random() * 9 + 2); 
            
            let randomIndex = Math.floor(Math.random() * conversionList.length);
            
            largerUnitsVar.innerHTML = randomNumber + ' ' + conversionList[randomIndex].large + ' = ';
            smallerUnitsVar.innerHTML = conversionList[randomIndex].small; 
            
            answer = randomNumber * conversionList[randomIndex].multiplier;
			
			problem = randomNumber + ' ' + conversionList[randomIndex].large;
			
			answerWithUnits = answer + ' ' + conversionList[randomIndex].small;
            
        }
        
        function checkAnswer() {
            
            let userInput = Number(continueVar.value);
            
            if(userInput === answer)
            {
				correctAnswer(1); 
            }
            else
            {
				wrongAnswerNoScore(); 
				//wrongAnswer(0); 
				
				showAnswerVar.innerHTML += problem + ' = ' + answerWithUnits + '<br>';
				
				//var thisProblem = new Problem(problem, answerWithUnits); 
				//problemList.push(thisProblem.numbersentence); 
            }
			
			showCurrentScore(); 
            
            continueVar.value = ''; 
            createProblem(); 
            
        }
        
    </script>
    
</html>