<html>
    
    <head>
        
        <meta charset="utf-8">
		
		<%- include("../../partials/sharedstyles") %>
        
        <style>
			
			.correctAnswer {
                position: relative; 
                -webkit-animation-name: example; /* Safari 4.0 - 8.0 */
                -webkit-animation-duration: 2s; /* Safari 4.0 - 8.0 */
                animation-name: correct;
                animation-duration: 2s;
            }
            
            .incorrectAnswer {
                position: relative; 
                -webkit-animation-name: example; /* Safari 4.0 - 8.0 */
                -webkit-animation-duration: 2s; /* Safari 4.0 - 8.0 */
                animation-name: incorrect;
                animation-duration: 2s;
            }
            
            #score {
                font-size: 1.2em; 
            }
            
            #popup {
                font-size: 2.5em;
                color: rgba(230,230,255,0.15);
            }
            
            @-webkit-keyframes correct {
                0%   {color:rgba(80,255,150,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top: -100px;}
          
                90% {color:rgba(80,255,150,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top:0px;}
                
                100% {visibility: hidden; display: none; font-size: 1em; margin: auto; width: 200px;}
            }
          
            @keyframes correct {
              0%   {color:rgba(80,255,150,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top:-100px;}
      
              90% {color:rgba(80,255,150,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top:0px;}
                
              100% {visibility: hidden; display: none; font-size: 1em; margin: auto; width: 200px;}
            }
            
            @-webkit-keyframes incorrect {
                0%   {color:rgba(255,80,50,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top:-90px;}
          
                90% {color:rgba(255,80,50,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top:0px;}
                
                100% {visibility: hidden; display: none; font-size: 1em; margin: auto; width: 200px;}
            }
          
            @keyframes incorrect {
              0%   {color:rgba(255,80,50,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top:-90px;}
      
              90% {color:rgba(255,80,50,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top:0px;}
                
              100% {visibility: hidden; display: none; font-size: 1em; margin: auto; width: 200px;}
            }
			
        </style>
    
    </head>
    
    <title>Hanson Prime/Composite Numbers Game</title>
    
    <body>
		
		<%- include("../../partials/navbaronly") %>
		
		<div class="container">
			
			<h1>Hanson Prime/Composite Numbers Game</h1>
			<hr>
			
			<%- include ("../../partials/highscores.ejs") %>
			
			<%- include ("../../partials/scoreform.ejs") %>
			
			<%- include ("../../partials/instructions/primecomposite.ejs") %>
			
			<br>
			
			<div id="timer"></div>
			
			<br>

			<h2 id='problemContainer'></h2>

			<button type="button" class="btn btn-success" id="startEasy" onclick="makeEasy();">
				START - EASY <i class="fas fa-play-circle"></i>
			</button>
			<button type="button" class="btn btn-warning" id="startGame">
				START - MEDIUM <i class="fas fa-play-circle"></i>
			</button>
			<button type="button" class="btn btn-danger" id="startHard" onclick="makeHard();">
				START - HARD <i class="fas fa-play-circle"></i>
			</button>
			<br>
			<button type="button" class="btn btn-secondary" id="resetGame">
				RESET <i class="fas fa-undo-alt"></i>
			</button>
			<br>
			<button type="button" class="btn btn-secondary" id="primeNumber">
				PRIME
			</button>
			<br>
			<br>
			<button type="button" class="btn btn-secondary" id="compositeNumber">
				COMPOSITE
			</button>
			<br>
			<br>

			<p id='score'>Current Score: </p>
			
			<div id='popup'> </div>

			<h3>Prime Numbers:</h3>
			<p id='showPrime'></p>

			<h3>Composite Numbers:</h3>
			<p id='showComposite'></p>
			
		</div>
        
    </body>
    
    <script>
		
		let gameName = "Hanson Prime/Composite Numbers Game"; 
        
		const scoreVar = document.querySelector('#score'); 
		//const continueVar = document.querySelector('#answer');
        const startGameVar = document.querySelector('#startGame');
        const resetGameVar = document.querySelector('#resetGame');
		const showPrimeVar = document.querySelector('#showPrime'); 
        //const showAnswerVar = document.querySelector('#showAnswer'); 
		const primeNumberVar = document.querySelector('#primeNumber');
		const submitScoreVar = document.querySelector('#submitScore'); 
		const startGameEasyVar = document.querySelector('#startEasy');
        const startGameHardVar = document.querySelector('#startHard');
		const showCompositeVar = document.querySelector('#showComposite'); 
		const compositeNumberVar = document.querySelector('#compositeNumber');
        const problemContainerVar = document.querySelector('#problemContainer'); 
		//const showPracticeProblemsVar = document.querySelector('#showPracticeProblems'); 
		
		let timerVar = document.querySelector("#timer"); 
		
		//GAME-SPECIFIC
        
		let isPrime = true;
        let isEasy = false;
        let isHard = false; 
        let numberCorrect = 0;
        let numberIncorrect = 0; 
		
		//EVENTS
        
        startGameVar.addEventListener('click', startGame);
        startGameEasyVar.addEventListener('click', startGame);
        startGameHardVar.addEventListener('click', startGame);
        resetGameVar.addEventListener('click', resetGame);
        primeNumberVar.addEventListener('click', checkPrime);
        compositeNumberVar.addEventListener('click', checkComposite); 
		
		//INITIALIZE
		setUp(); 
        
        //FUNCTIONS
		
		function setUp() {
			
			resetOff();
			//continueOff(); 
			problemContainerOff(); 
			
			timerVar.style.display = "none"; 
			submitScoreVar.style.display = 'none'; 
			//showPracticeProblemsVar.style.display = 'none'; 
			
			primeNumberVar.disabled = true;
        	compositeNumberVar.disabled = true;
			primeNumberVar.style.display = 'none';
       	    compositeNumberVar.style.display = 'none';
			
		}
        
        function startGame() {
			
			startOff(); 
			resetOff(); 
			//continueOn(); 
			problemContainerOn(); 
			
			setUpTimer();
	
            startGameEasyVar.disabled = true;
			startGameHardVar.disabled = true;
            startGameEasyVar.style.display = 'none'; 
            startGameHardVar.style.display = 'none';
			
            primeNumberVar.disabled = false;
			compositeNumberVar.disabled = false;
            primeNumberVar.style.display = 'initial';
            compositeNumberVar.style.display = 'initial'; 
			
            createProblem(); //generate first problem
			
        }
		
		function timeout() {
			
			endTimer(); 
			
			//alert('Time\'s Up!');
			
			resetOn();
			//continueOff(); 
			
			problemContainerVar.style.color = 'green';
			//showPracticeProblemsVar.style.display = 'block'; 
			//problemContainerVar.innerHTML = 'Final Score: ' + finalScore; 
			
			primeNumberVar.disabled = true;
            compositeNumberVar.disabled = true;
			primeNumberVar.style.display = 'none';
            compositeNumberVar.style.display = 'none'; 
            
			//create new score 
			
			if(finalScore > document.querySelector('.lowestHighScore').value || 
			   finalScore > document.querySelector('.usershighscore').value)
				{
					createNewScore(); 
				}
			
			//populate problems
			//populatePracticeProblems(); 
			///////
		
				
			//document.getElementById("submitscore").style.display = "block"; 
			//document.getElementById("inputScore").value = finalScore; 	
                
            problemContainerVar.innerHTML = 'Final Score: ' + finalScore +
            '<br>' + 'Number Correct: ' + numberCorrect + '<br>' + '<span style="color:red">' +
            'Number Incorrect: ' + numberIncorrect + '</span>' + '<br>' + 'Rate Correct: ' +
            (Math.round(numberCorrect / (numberCorrect + numberIncorrect) * 100)) + '%';
			
            //document.querySelector('.problem').style.color = 'green';
			
		}
        
        function resetGame() {
			
			//problemList = []; 
			
       		startOn(); 
			resetOff(); 
			clearTimer(); 
			//continueOff(); 
			resetVariables();
			problemContainerOff(); 
			//createPracticeProblemsButton(); 
			
			//continueVar.value = ''; 
			scoreVar.innerHTML = ''; 
			//showAnswerVar.innerHTML = ''; 
			problemContainerVar.innerHTML = ''; 
			submitScoreVar.style.display = 'none'; 
			problemContainerVar.style.color = 'black'; 
			//showPracticeProblemsVar.style.display = 'none';
			//continueVar.style.backgroundColor = 'rgba(255,255,255,1)';
			
			primeNumberVar.disabled = true;
            compositeNumberVar.disabled = true;
			primeNumberVar.style.display = 'none';
            compositeNumberVar.style.display = 'none';
			
			startGameEasyVar.disabled = false;
			startGameHardVar.disabled = false;
            startGameEasyVar.style.display = 'initial';
            startGameHardVar.style.display = 'initial';
			
			showPrimeVar.innerHTML = '';
            showCompositeVar.innerHTML = '';
		
			isEasy = false;
            isHard = false; 
            numberCorrect = 0;
            numberIncorrect = 0; 
            let randomNumber = 0;
			
        }
        
        function createProblem() {
             
            if(isEasy === true)
            {
                randomNumber = Math.floor(Math.random() * 19 + 2);
            }
            else if(isHard === true)
            {
                randomNumber = Math.floor(Math.random() * 98 + 2);
            }
            else
            {
                randomNumber = Math.floor(Math.random() * 49 + 2);
            }
            
            isPrime = true; 
            
            for (let currentNumber = 2; currentNumber <= randomNumber - 1; currentNumber++)
            {
                if (randomNumber % currentNumber === 0)
                {
                    isPrime = false;
                    break; 
                }
            }
            
            problemContainerVar.innerHTML = randomNumber;

        }
        
        function checkPrime() {
            
            if(isPrime === true)
            {
                //document.querySelector('body').style.backgroundColor = '#ccffcc';
				document.getElementById('popup').innerHTML = 
					'<div class="correctAnswer"><i class="fas fa-thumbs-up"></i>' + '</div>';
                finalScore += randomNumber;
                numberCorrect++; 
                showPrimeVar.innerHTML += randomNumber + '<br>';
            }
            else
            {
                //document.querySelector('body').style.backgroundColor = '#ffebe6';
				document.getElementById('popup').innerHTML = 
					'<div class="incorrectAnswer"><i class="fas fa-thumbs-down"></i>' + '</div>';
                finalScore -= randomNumber * 5;
                numberIncorrect++; 
                showCompositeVar.innerHTML += randomNumber + '<br>';
            }
            
            scoreVar.innerHTML = 'Current Score: ' + finalScore;
            
            createProblem(); 
        }
        
        function checkComposite() {
            
            if(isPrime === false)
            {
                //document.querySelector('body').style.backgroundColor = '#ccffcc';
				document.getElementById('popup').innerHTML = 
					'<div class="correctAnswer"><i class="fas fa-thumbs-up"></i>' + '</div>';
                finalScore += randomNumber;
                numberCorrect++; 
                showCompositeVar.innerHTML += randomNumber + '<br>';
            }
            else
            {
                //document.querySelector('body').style.backgroundColor = '#ffebe6';
				document.getElementById('popup').innerHTML = 
					'<div class="incorrectAnswer"><i class="fas fa-thumbs-down"></i>' + '</div>';
                finalScore -= randomNumber * 5;
                numberIncorrect++; 
                showPrimeVar.innerHTML += randomNumber + '<br>';
            }
            
            scoreVar.innerHTML = 'Current Score: ' + finalScore;
            
            createProblem(); 
        }
        
        function makeEasy() {
            
            isEasy = true; 
            
        }
        
        function makeHard() {
            
            isHard = true;
            
        }
        
    </script>
    
</html>