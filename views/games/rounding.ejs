<html>
    
    <head>
        
        <meta charset="utf-8">
		
		<%- include("../partials/sharedstyles") %>
        
        <style>
            
            hr {
                border: 0;
                height: 1px;
                background-image: linear-gradient(to right, rgba(0, 0, 0, 0), rgba(0, 0, 0, 0.75), rgba(0, 0, 0, 0));
            }
            
            #popup {
                color: rgba(230,230,255,0.15);
                font-size: 1.5em; 
            }
            
            .correctAnswer {
                position: relative; 
                -webkit-animation-name: example; /* Safari 4.0 - 8.0 */
                -webkit-animation-duration: 2s; /* Safari 4.0 - 8.0 */
                animation-name: correct;
                animation-duration: 2s;
            }
            
            .incorrectAnswer {
                position: relative; 
                -webkit-animation-name: example; /* Safari 4.0 - 8.0 */
                -webkit-animation-duration: 2s; /* Safari 4.0 - 8.0 */
                animation-name: incorrect;
                animation-duration: 2s;
            }
            
            @-webkit-keyframes correct {
                0%   {color:rgba(80,255,150,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top: 50px;}
          
                90% {color:rgba(80,255,150,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top:0px;}
                
                100% {color: rgba(80, 255, 150, 0.6); display: none; font-size: 1em; margin: auto; width: 200px;}
            }
          
            @keyframes correct {
              0%   {color:rgba(80,255,150,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top:50px;}
      
              90% {color:rgba(80,255,150,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top:0px;}
                
              100% {color: rgba(80, 255, 150, 0.6); display: none; font-size: 1em; margin: auto; width: 200px;}
            }
            
            @-webkit-keyframes incorrect {
                0%   {color:rgba(255,80,50,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top:50px;}
          
                90% {color:rgba(255,80,50,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top:0px;}
                
                100% {color:rgba(255,80,50,0.6); display: none; font-size: 1em; margin: auto; width: 200px;}
            }
          
            @keyframes incorrect {
              0%   {color:rgba(255,80,50,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top:50px;}
      
              90% {color:rgba(255,80,50,0.6); font-size: 1em; width: 200px; margin: auto; left:0px; top:0px;}
                
              100% {color:rgba(255,80,50,0.6); display: none; font-size: 1em; margin: auto; width: 200px;}
            }
            
        </style>
    
    </head>
    
    <title>Hanson Rounding Game</title>
    
    <body>
		
		<%- include("../partials/navbaronly") %>
           
        <h1>Hanson Rounding Game</h1>
        <hr>
		
		<%- include ("../partials/highscores.ejs") %>
        
        <p id='problem' class='problem'></p>
		
		<div class="container scoreform" id="submitscore">
				<div class='row justify-content-center'>
					<div class="col-xsm-4">
						<form class='form-signin' action='/games/submit' method='POST'>
							<h1 class='h3 credentialsheading mb-3 font-weight-normal'>Submit Score</h1>
							<div class='form-group'>
								<label for='inputUsername' class='sr-only'>Username</label>
								<input type='text' id='inputUsername' class='form-control' name='username' value=<%= currentUser.username %> readonly>
							</div>
							<div class='form-group'>
								<label for='inputGame' class='sr-only'>Game</label>
								<input type='text' id='inputGame' class='form-control' name='game' value='Hanson Rounding Game' readonly>
							</div>
							<div class='form-group'>
								<label for='inputScore' class='sr-only'>Score</label>
								<input type='number' id='inputScore' class='form-control' name='score' readonly>
							</div>
							<div class='form-group'>
								<button class='btn btn-lg btn-primary btn-block' type='submit'>Submit Score</button>
							</div>
						</form>
					</div>
				</div>
			</div>
         
        <div id = 'popup'> </div>
        <br>
            
        <input id='input' class='input' type='number' placeholder=''>
        <br>
            
        <button type="button" class="btn btn-primary startGame">START <i class="fas fa-play-circle"></i></button>
        <br>
        <button type="button" class="btn btn-primary resetGame">RESET <i class="fas fa-undo-alt"></i></button>
            
        <p id='score' class='score'></p>
        <p id='incorrect' class='incorrect'></p>
        
    </body>
    
    <script>
        
        const startGameVar = document.querySelector('.startGame');
        const resetGameVar = document.querySelector('.resetGame');
        const continueVar = document.querySelector('.input');
        
        let score = 0;
        let answer = 0;
        let answerString = '';
        let answerStringCommas = ''; 
        let problem = ''; 
        
        //game start conditions
        resetGameVar.disabled = true;
        resetGameVar.style.display = 'none';
        continueVar.style.display = 'none'; 
        continueVar.disabled = true; //make ability to check answer disabled until start of game
		document.getElementById("submitscore").style.display = "none"; 
        
        //events
        
        startGameVar.addEventListener('click',startGame);
        resetGameVar.addEventListener('click', resetGame);
        continueVar.addEventListener('keydown', function(event) {
            if(event.keyCode === 13 && startGameVar.disabled == true) {
                checkAnswer(); 
            }
        }); 
        
        //functions
        
        function startGame() {
            
            startGameVar.disabled = true;
            startGameVar.style.display = 'none';
            continueVar.disabled = false; //make it possible to check an answer            
            continueVar.style.display = 'initial'; 
            continueVar.disabled = false; //make ability to check answer disabled until start of game
            
            document.getElementById('score').innerHTML = 'Problems Correct: '; 
            
            setTimeout(timeout, 60000);
            
            createProblem();
            
        }
		
		function timeout() {
			
			//end game conditions
			
            alert('Time\s Up!');
            document.querySelector('body').style.backgroundColor = '#ffffff';
            continueVar.disabled = true;
            resetGameVar.disabled = false;
            resetGameVar.style.display = 'initial';
            document.querySelector('.score').style.color = 'green';
				
			//create new score
				
			document.getElementById("submitscore").style.display = "block"; 
			document.getElementById("inputScore").value = score;
			
		}
        
        function createProblem() {
            
            answerString = '';
            answerStringCommas = ''; 
            
            let place = ['ten','hundred','thousand','ten thousand','hundred thousand'];
            
            let randomNumber = Math.floor(Math.random() * 998999 + 1000);
            
            let randomNumberString = String(randomNumber);
            let randomNumberStringCommas = '';
            
            let stringToRound = '';
            let numberToRound = 0;
            let remainingNumberString = '';
            let remainingZeroString = '';
            
            let randomPlace = Math.floor(Math.random() * (randomNumberString.length - 1));
            
            let characterArray = [];
            let characterArrayCommas = [];
            
            let characterArrayAnswer = [];
            let characterArrayCommasAnswer = []; 
            
            //Add a comma to randomNumberString:
            if(randomNumberString.length > 3)
            {
                
                for(let i = 0; i < randomNumberString.length; i++)
                {
                    characterArray[i] = randomNumberString[i];
                }
                
                for(let i = characterArray.length - 1; i >= 0; i--)
                {
                    if(i === characterArray.length - 4)
                    {
                        characterArrayCommas.unshift(','); 
                    }
                    characterArrayCommas.unshift(characterArray[i]); 
                }
                
                //put the characterArrayCommas back into a string:
                
                for(let i = 0; i < characterArrayCommas.length; i++)
                {
                    randomNumberStringCommas += characterArrayCommas[i]; 
                }
            }
            
            problem = 'Round the number ' + randomNumberStringCommas + ' to the nearest ' + '<span style="text-decoration:underline;">' + place[randomPlace] + '</span>' + ':';
            document.getElementById('problem').innerHTML = problem; 
            
            //CREATE ANSWER BELOW:
            
            let rightPlace = characterArray[characterArray.length - 1 - place.indexOf(place[randomPlace])];
            
            stringToRound = randomNumberString.substr(0, randomNumberString.length - 1 - place.indexOf(place[randomPlace])); 
            
            numberToRound = Number(stringToRound); 
            
            remainingNumberString = randomNumberString.substr(randomNumberString.length - 1 - place.indexOf(place[randomPlace]), randomNumberString.length);
            
            for(let i = 0; i < remainingNumberString.length; i++)
            {
                remainingZeroString += '0'; 
            }
            
            rightPlace = Number(rightPlace); 
            
            if(rightPlace >= 5)
            {
                numberToRound += 1;
                stringToRound = String(numberToRound); 
            }
            
            answerString = stringToRound + remainingZeroString;
            
            answer = Number(answerString);
         
            //add commas answer to create 'problem':
            
            if(answerString.length > 3)
            {
                
                for(let i = 0; i < answerString.length; i++)
                {
                    characterArrayAnswer[i] = answerString[i];
                }        
                
                for(let i = characterArrayAnswer.length - 1; i >= 0; i--)
                {
                    if(i === characterArrayAnswer.length - 4)
                    {
                        characterArrayCommasAnswer.unshift(','); 
                    }
                    characterArrayCommasAnswer.unshift(characterArrayAnswer[i]); 
                }
                
                //put the characterArrayCommasAnswer back into a string:
                
                for(let i = 0; i < characterArrayCommasAnswer.length; i++)
                {
                    answerStringCommas += characterArrayCommasAnswer[i]; 
                }
                
            }
            
            //if million
            if(answer === 1000000)
            {
                answerString = '1000000';
                answerStringCommas = '1,000,000';
            }
            
            problem = randomNumberStringCommas + ' rounded to the nearest ' + '<span style="text-decoration:underline;">' + place[randomPlace] + '</span>' + ' is ' + answerStringCommas + '.';
            
        }
        
        function checkAnswer() {
            
            let userInput = Number(continueVar.value);
            
            if(userInput === answer)
            {
                continueVar.style.backgroundColor = 'rgba(80,255,150,0.10)'; 
                document.getElementById('popup').innerHTML = '<div class="correctAnswer"><i class="fas fa-thumbs-up"></i></div>';
                score += 1; 
            }
            else
            {
                document.getElementById('popup').innerHTML = '<div class="incorrectAnswer"><i class="fas fa-thumbs-down"></i></div>';
                continueVar.style.backgroundColor = 'rgba(255,80,50,0.10)';
                document.getElementById('incorrect').innerHTML += problem + '<br>'; 
            }
            
            document.getElementById('score').innerHTML = 'Problems Correct: ' + score;
            
            continueVar.value = ''; 
            createProblem(); 
            
        }
        
        function resetGame() {
            
            score = 0;
            answer = 0;
            problem = '';
            
            resetGameVar.disabled = true;
            resetGameVar.style.display = 'none'; 
        
            continueVar.disabled = true;
            continueVar.style.display = 'none'; 
            
            startGameVar.disabled = false;
            startGameVar.style.display = 'initial';
            
            document.querySelector('.score').style.color = 'black';
            document.getElementById('score').innerHTML = 'Problems Correct: ';
            
            document.getElementById('incorrect').innerHTML = '';
            
            continueVar.style.backgroundColor = 'rgba(255,255,255,1)';
			
			document.getElementById("submitscore").style.display = "none"; 
			document.getElementById('score').innerHTML = '';
			document.getElementById('problem').innerHTML = ''; 
            
        }
        
    </script>
    
</html>